{"version":3,"sources":["components/contactList/contactList.module.css","components/contactListItem/contactListItem.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsOperation.js","components/conactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","redux/theme/themeTypes.js","redux/theme/themeAction.js","services/themeSwitch.js","App.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js","components/conactForm/contactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","changeContactRequest","changeContactSuccess","changeContactError","addIdEditContact","deleteIdEditContact","db","addContact","name","number","dispatch","contactsAction","axios","post","then","data","catch","error","deleteContact","id","delete","fetchContacts","get","changeContact","patch","console","log","ConatctForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","this","className","styles","editForm","label","input","type","placeholder","onChange","button","Component","connect","contactsOperation","ContactListItem","contact","isShowForm","listItem","listItemP","listItemButton","onClick","contactsRoot","idEditContact","some","idEdit","filter","contacts","toLowerCase","includes","contactList","map","key","onChangeFilter","text","Logo","changeTheme","theme","themeTypes","payload","themeSwitch","light","headerBg","fontColor","bodybg","dark","App","onFetchContacts","toggleTheme","isLoadingContact","style","color","background","sectionTitle","mapDispatchToProps","themeAction","loading","createReducer","action","addContactsError","combineReducers","themeReducer","store","configureStore","reducer","contactsReducer","middleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.733c356d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__3OGdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactListItem_listItem__14smR\",\"listItemP\":\"contactListItem_listItemP__2jV6x\",\"listItemButton\":\"contactListItem_listItemButton__fntAa\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/ADD_REQUEST');\r\nconst addContactSuccess = createAction('contacts/ADD_SUCCESS');\r\nconst addContactError = createAction('contacts/ADD_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('contacts/FETCH_REQUEST');\r\nconst fetchContactsSuccess = createAction('contacts/FETCH_SUCCESS');\r\nconst fetchContactsError = createAction('contacts/FETCH_ERROR');\r\n\r\nconst deleteContactRequest = createAction('contacts/DELETE_REQUEST');\r\nconst deleteContactSuccess = createAction('contacts/DELETE_SUCCESS');\r\nconst deleteContactError = createAction('contacts/DELETE_ERROR');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst changeContactRequest = createAction ('contacts/CHANGE_CONTACT_REQUEST')\r\nconst changeContactSuccess = createAction ('contacts/CHANGE_CONTACT_SUCCESS')\r\nconst changeContactError = createAction ('contacts/CHANGE_CONTACT_ERROR')\r\n\r\nconst addIdEditContact = createAction('contacts/addIdEditContact');\r\n// const addIdEditContactRequest = createAction('contacts/ADD_ID_EDIT_CONTACT_REQUEST');\r\n// const addIdEditContactSuccess = createAction('contacts/ADD_ID_EDIT_CONTACT_SUCCESS');\r\n// const addIdEditContactError = createAction('contacts/ADD_ID_EDIT_CONTACT_ERROR');\r\n\r\nconst deleteIdEditContact = createAction('contacts/deleteIdEditContact');\r\n// const deleteIdEditContactRequest = createAction('contacts/DELETE_ID_EDIT_CONTACT_REQUEST');\r\n// const deleteIdEditContactSuccess = createAction('contacts/DELETE_ID_EDIT_CONTACT_SUCCESS');\r\n// const deleteIdEditContactError = createAction('contacts/DELETE_ID_EDIT_CONTACT_ERROR');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  // addIdEditContactRequest,\r\n  // addIdEditContactSuccess,\r\n  // addIdEditContactError,\r\n\r\n  // deleteIdEditContactRequest,\r\n  // deleteIdEditContactSuccess,\r\n  // deleteIdEditContactError,\r\n\r\n  changeContactRequest,\r\n  changeContactSuccess,\r\n  changeContactError,\r\n\r\n  changeFilter,\r\n  // changeContact,\r\n  addIdEditContact,\r\n  deleteIdEditContact,\r\n};\r\n","import contactsAction from './contactsAction';\r\nimport axios from 'axios';\r\n\r\nconst db = 'http://localhost:2020/contacts';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsAction.addContactRequest());\r\n\r\n  axios\r\n    .post(db, { number, name })\r\n    .then(({ data }) => {\r\n      dispatch(contactsAction.addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactsAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(db)\r\n    .then(({ data }) => dispatch(contactsAction.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsAction.fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(contactsAction.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`${db}/${id}`)\r\n    .then(() => dispatch(contactsAction.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsAction.deleteContactError(error)));\r\n};\r\n\r\nconst changeContact = (id, name, number) => (dispatch)=> {\r\n  dispatch(contactsAction.changeContactRequest());\r\n\r\n  axios\r\n   .patch(`${db}/${id}`, {id, number, name })\r\n   .then(console.log({id, number, name }))\r\n   .then(({id, number, name })=> dispatch(contactsAction.changeContactSuccess(id, number, name )))\r\n   .catch((error)=>dispatch(contactsAction.changeContactError(error)))\r\n}\r\n\r\n// const addIdEditContact = (id) => (dispatch) => {\r\n//   dispatch(contactsAction.addIdEditContactRequest());\r\n\r\n//   axios\r\n//     .get(`${db}/${id}`)\r\n//     .then(console.log(id))\r\n//     .then(() => dispatch(contactsAction.addIdEditContactSuccess(id)))\r\n//     .catch(error => dispatch(contactsAction.addIdEditContactError(error)));\r\n// };\r\n\r\n// const deleteIdEditContact = (id) => (dispatch) => {\r\n//   dispatch(contactsAction.deleteIdEditContactRequest());\r\n\r\n//   axios\r\n//     .delete(`${db}/${id}`)\r\n//     .then(() => dispatch(contactsAction.deleteContactSuccess(id)))\r\n//     .catch(error => dispatch(contactsAction.deleteContactError(error)));\r\n// };\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n  changeContact,\r\n  // addIdEditContact,\r\n  // deleteIdEditContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './contactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\n\r\nclass ConatctForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n    name !== '' && number !== '' && onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name*\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number*\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (name, number) =>\r\n      dispatch(contactsOperation.addContact(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ConatctForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './contactListItem.module.css';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\n\r\nclass ContactListItem extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { deleteIdEditContact, changeContact } = this.props;\r\n    const { name, number } = this.state;\r\n    changeContact(name, number);\r\n    deleteIdEditContact();\r\n  };\r\n\r\n  render() {\r\n    const { contact, isShowForm, addIdEditContact, deleteContact } = this.props;\r\n    const { name, number } = this.state;\r\n    console.log(addIdEditContact);\r\n    return (\r\n      <li className={styles.listItem}>\r\n        <p className={styles.listItemP}>\r\n          name: {contact.name} tel: {contact.number}\r\n        </p>\r\n\r\n        {!isShowForm && (\r\n          <button\r\n            className={styles.listItemButton}\r\n            type=\"button\"\r\n            onClick={addIdEditContact}\r\n          >\r\n            Start Edit\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          className={styles.listItemButton}\r\n          onClick={deleteContact}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n\r\n        {isShowForm && (\r\n          <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n              Name*\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label}>\r\n              Phone number*\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                placeholder=\"number\"\r\n              />\r\n            </label>\r\n            <button className={styles.button} type=\"submit\">\r\n              EDIT\r\n            </button>\r\n          </form>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n  const arrayIdsEditContact = state.contactsRoot.idEditContact;\r\n  const isShowForm = arrayIdsEditContact.some(idEdit => idEdit === id);\r\n  // console.log(state.contactsRoot.idEditContact)\r\n  return {\r\n    isShowForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => {\r\n  return {\r\n    deleteContact: () => dispatch(contactsOperation.deleteContact(id)),\r\n    // changeContact: (name, number) =>\r\n    //   dispatch(contactsAction.changeContact(id, name, number)),\r\n    changeContact: (name, number) =>\r\n    dispatch(contactsOperation.changeContact(id, name, number)),\r\n    addIdEditContact: () => dispatch(contactsAction.addIdEditContact(id)),\r\n    // addIdEditContact: () => dispatch(contactsOperation.addIdEditContact(id)),\r\n    deleteIdEditContact: () => dispatch(contactsAction.deleteIdEditContact(id)),\r\n    // deleteIdEditContact: () => dispatch(contactsOperation.deleteIdEditContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport styles from './contactList.module.css';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  // console.log(contacts);\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} id={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state)\r\n\r\n  const filter = state.contactsRoot.filter;\r\n  return {\r\n    contacts: state.contactsRoot.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\"\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contactsRoot.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeFilter: (text) => dispatch( contactsAction.changeFilter(text))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n// export default (Filter);\r\n\r\n","import React from 'react';\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import styles from './logo.module.css';\r\n\r\n// const logoStyles = {\r\n//   appear: styles.appear,\r\n//   appearActive: styles.appearActive,\r\n// };\r\n\r\nconst Logo = () => {\r\n  return (\r\n    // <CSSTransition\r\n    //   in={true}\r\n    //   appear={true}\r\n    //   timeout={1000}\r\n    //   classNames={logoStyles}\r\n    //   unmountOnExit\r\n    // >\r\n      <h1>Phonebook</h1>\r\n    // </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;","export default {\r\n    CHANGE_THEME: \"theme/CHANGE_THEME\",\r\n}","import themeTypes from './themeTypes';\r\n\r\nconst changeTheme = (theme) => ({\r\n  type: themeTypes.CHANGE_THEME,\r\n  payload: {\r\n    theme,\r\n  },\r\n});\r\n\r\nexport default { changeTheme };","const themeSwitch = {\r\n    light: {\r\n      headerBg: '#F7B30C',\r\n      fontColor: 'black',\r\n      bodybg: 'white',\r\n    },\r\n    dark: {\r\n      headerBg: '#3c3c3c',\r\n      fontColor: 'white',\r\n      bodybg: 'black',\r\n    },\r\n  };\r\n  \r\n  export default themeSwitch;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ConatctForm from './components/conactForm/ContactForm';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport styles from './App.css';\r\nimport Logo from './components/logo/Logo';\r\nimport themeAction from './redux/theme/themeAction';\r\nimport themeSwitch from './services/themeSwitch';\r\nimport contactsOperation from \"./redux/contacts/contactsOperation\"\r\n\r\nclass App extends Component {\r\n  componentDidMount (){\r\n    this.props.onFetchContacts()\r\n  }\r\nrender() {\r\n  const { theme, toggleTheme, isLoadingContact } = this.props\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeSwitch[theme].fontColor,\r\n        background: themeSwitch[theme].bodybg,\r\n      }}\r\n    >\r\n      <div>\r\n        <>\r\n          <Logo />\r\n          {isLoadingContact && <h2>Loading...</h2>}\r\n          <button onClick={toggleTheme}>Change Theme</button>\r\n        </>\r\n      </div>\r\n      <ConatctForm />\r\n      <h2 className={styles.sectionTitle}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n  \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.contactsRoot.loading);\r\n  return {\r\n    theme: state.theme,\r\n    isLoadingContact: state.contactsRoot.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: themeAction.changeTheme,\r\n  onFetchContacts: contactsOperation.fetchContacts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactsAction';\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeContact = (state, action) => {\r\n  // console.log(action.payload.contact);\r\n  return state.map(contact => {\r\n    return contact.id === action.payload.contact.id\r\n      ? {\r\n          ...contact,\r\n          name: action.payload.contact.name,\r\n          number: action.payload.contact.number,\r\n        }\r\n      : contact;\r\n  });\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsAction.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsAction.addContactSuccess]: onAddContact,\r\n  [contactsAction.deleteContactSuccess]: onDeleteContact,\r\n  [contactsAction.changeContactSuccess]: onChangeContact,\r\n  // [contactsAction.changeContact]: onChangeContact,\r\n});\r\n\r\nconst onAddIdEditContact = (state, { payload }) => {\r\n  return [...state, payload];\r\n};\r\n\r\nconst onDeleteIdEditContact = (state, { payload }) => {\r\n  return state.filter(id => id !== payload);\r\n};\r\n\r\nconst idEditContact = createReducer([], {\r\n  [contactsAction.addIdEditContact]: onAddIdEditContact,\r\n  [contactsAction.deleteIdEditContact]: onDeleteIdEditContact,\r\n  // [contactsAction.addIdEditContactSuccess]: onAddIdEditContact,\r\n  // [contactsAction.deleteIdEditContactSuccess]: onDeleteIdEditContact,\r\n});\r\n\r\nconst onChangeFilter = (state, { payload }) => {\r\n  // console.log(payload);\r\n  return payload;\r\n};\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.changeFilter]: onChangeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsAction.fetchContactsRequest]: () => true,\r\n  [contactsAction.fetchContactsSuccess]: () => false,\r\n  [contactsAction.fetchContactsError]: () => false,\r\n  [contactsAction.addContactRequest]: () => true,\r\n  [contactsAction.addContactSuccess]: () => false,\r\n  [contactsAction.addContactsError]: () => false,\r\n  [contactsAction.deleteContactRequest]: () => true,\r\n  [contactsAction.deleteContactSuccess]: () => false,\r\n  [contactsAction.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  idEditContact,\r\n  filter,\r\n  loading,\r\n});\r\n","import themeTypes from './themeTypes';\r\n\r\nconst themeReducer = (state = 'light', action) => {\r\n  switch (action.type) {\r\n    case themeTypes.CHANGE_THEME:\r\n      if (state && state === 'light') {\r\n        return 'dark';\r\n      } else {\r\n        return 'light';\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n  export default themeReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    theme: themeReducer,\r\n    contactsRoot: contactsReducer,\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__28Wa3\",\"editForm\":\"contactForm_editForm__ZrVCs\",\"input\":\"contactForm_input__3LP4-\",\"editInput\":\"contactForm_editInput__Udf71\",\"button\":\"contactForm_button__2t1tl\",\"editButton\":\"contactForm_editButton__2ZzSE\",\"label\":\"contactForm_label__1axD9\"};"],"sourceRoot":""}