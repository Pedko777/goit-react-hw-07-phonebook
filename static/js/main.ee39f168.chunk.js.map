{"version":3,"sources":["components/contactList/contactList.module.css","redux/theme/themeAction.js","redux/contacts/contactsAction.js","redux/contacts/contactsOperation.js","redux/contacts/contactsSelectors.js","redux/theme/themeSelectors.js","services/themeSwitch.js","components/conactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactListItem/ContactListIemContainer.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","App.js","AppContainer.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js","components/contactListItem/contactListItem.module.css","components/conactForm/contactForm.module.css"],"names":["module","exports","changeTheme","createAction","addContactRequest","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","changeContactRequest","changeContactSuccess","changeContactError","addIdEditContact","deleteIdEditContact","axios","defaults","baseURL","name","number","dispatch","contactsAction","post","then","data","catch","error","id","delete","get","patch","contact","getFilter","state","contactsRoot","filter","getContacts","contacts","getLoading","loading","getFilteredContacts","createSelector","toLowerCase","includes","themeColor","themeSwitch","light","headerBg","fontColor","bodybg","dark","ConatctForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","this","className","styles","editForm","label","input","type","placeholder","onChange","button","Component","connect","contactsOperation","ContactListItem","changeContact","isShowForm","deleteContact","console","log","listItem","listItemP","listItemButton","onClick","idEditContact","some","idEdit","contactsSelectors","contactList","map","key","onChangeFilter","text","Logo","App","theme","isLoadingContact","themeState","style","color","background","sectionTitle","length","AppContainer","onFetchContacts","themeSelectors","themeAction","createReducer","action","payload","addContactsError","combineReducers","themeReducer","store","configureStore","reducer","contactsReducer","middleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee39f168.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__3OGdo\"};","import {createAction} from \"@reduxjs/toolkit\"\r\n\r\nconst changeTheme = createAction('theme/changeTheme');\r\n\r\nexport default { changeTheme };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/ADD_REQUEST');\r\nconst addContactSuccess = createAction('contacts/ADD_SUCCESS');\r\nconst addContactError = createAction('contacts/ADD_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('contacts/FETCH_REQUEST');\r\nconst fetchContactsSuccess = createAction('contacts/FETCH_SUCCESS');\r\nconst fetchContactsError = createAction('contacts/FETCH_ERROR');\r\n\r\nconst deleteContactRequest = createAction('contacts/DELETE_REQUEST');\r\nconst deleteContactSuccess = createAction('contacts/DELETE_SUCCESS');\r\nconst deleteContactError = createAction('contacts/DELETE_ERROR');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst changeContactRequest = createAction ('contacts/CHANGE_CONTACT_REQUEST')\r\nconst changeContactSuccess = createAction ('contacts/CHANGE_CONTACT_SUCCESS')\r\nconst changeContactError = createAction ('contacts/CHANGE_CONTACT_ERROR')\r\n\r\nconst addIdEditContact = createAction('contacts/addIdEditContact');\r\nconst deleteIdEditContact = createAction('contacts/deleteIdEditContact');\r\n\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeContactRequest,\r\n  changeContactSuccess,\r\n  changeContactError,\r\n\r\n  changeFilter,\r\n  addIdEditContact,\r\n  deleteIdEditContact,\r\n};\r\n","import contactsAction from './contactsAction';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2020';\r\n\r\n// const db = 'http://localhost:2020/contacts';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsAction.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { number, name })\r\n    .then(({ data }) => {\r\n      dispatch(contactsAction.addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactsAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(contactsAction.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsAction.fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactsAction.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsAction.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsAction.deleteContactError(error)));\r\n};\r\n\r\nconst changeContact = (id, name, number) => dispatch => {\r\n  dispatch(contactsAction.changeContactRequest());\r\n\r\n  axios\r\n    .patch(`/contacts/${id}`, { number, name })\r\n    // .then(console.log({ id, number, name }))\r\n    .then(({data}) => {\r\n      // console.log(data);\r\n      dispatch(contactsAction.changeContactSuccess({contact:{id: data.id, name: data.name, number: data.number}}));\r\n    })\r\n    .catch(error => dispatch(contactsAction.changeContactError(error)));\r\n};\r\n\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n  changeContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nconst getLoading = state => state.contactsRoot.loading;\r\nconst getFilter = state => state.contactsRoot.filter;\r\nconst getContacts = state => state.contactsRoot.contacts;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contactsRoot, filter) => {\r\n    return contactsRoot.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n// contactsRoot\r\n// const getFilteredContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n//   );\r\n// };\r\n\r\nexport default {\r\n  getFilter,\r\n  getLoading,\r\n  getContacts,\r\n  getFilteredContacts,\r\n};\r\n","const getTheme = state => state.themeColor;\r\n\r\nexport default {getTheme};\r\n","  \r\nconst themeSwitch = {\r\n  light: {\r\n    headerBg: '#F7B30C',\r\n    fontColor: 'black',\r\n    bodybg: 'white',\r\n  },\r\n  dark: {\r\n    headerBg: '#3c3c3c',\r\n    fontColor: 'white',\r\n    bodybg: 'black',\r\n  },\r\n};\r\n\r\nexport default themeSwitch;","import React, { Component } from 'react';\r\nimport styles from './contactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\n\r\nclass ConatctForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n    name !== '' && number !== '' && onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name*\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number*\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (name, number) =>\r\n      dispatch(contactsOperation.addContact(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ConatctForm);\r\n","import React, { Component } from 'react';\r\nimport styles from './contactListItem.module.css';\r\n\r\n\r\nclass ContactListItem extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { deleteIdEditContact, changeContact } = this.props;\r\n    const { name, number } = this.state;\r\n    changeContact(name, number);\r\n    deleteIdEditContact();\r\n  };\r\n\r\n  render() {\r\n    const { contact, isShowForm, addIdEditContact, deleteContact } = this.props;\r\n    const { name, number } = this.state;\r\n    console.log(addIdEditContact);\r\n    return (\r\n      <li className={styles.listItem}>\r\n        <p className={styles.listItemP}>\r\n          name: {contact.name} tel: {contact.number}\r\n        </p>\r\n\r\n        {!isShowForm && (\r\n          <button\r\n            className={styles.listItemButton}\r\n            type=\"button\"\r\n            onClick={addIdEditContact}\r\n          >\r\n            Start Edit\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          className={styles.listItemButton}\r\n          onClick={deleteContact}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n\r\n        {isShowForm && (\r\n          <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n              Name*\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label}>\r\n              Phone number*\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                placeholder=\"number\"\r\n              />\r\n            </label>\r\n            <button className={styles.button} type=\"submit\">\r\n              EDIT\r\n            </button>\r\n          </form>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactListItem;\r\n","import { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\nimport ContactListItem from \"./ContactListItem\"\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n    const arrayIdsEditContact = state.contactsRoot.idEditContact;\r\n    const isShowForm = arrayIdsEditContact.some(idEdit => idEdit === id);\r\n    return {\r\n      isShowForm,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch, { id }) => {\r\n    return {\r\n      deleteContact: () => dispatch(contactsOperation.deleteContact(id)),\r\n      changeContact: (name, number) =>\r\n        dispatch(contactsOperation.changeContact(id, name, number)),\r\n      addIdEditContact: () => dispatch(contactsAction.addIdEditContact(id)),\r\n      deleteIdEditContact: () => dispatch(contactsAction.deleteIdEditContact(id)),\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);","import React from 'react';\r\nimport styles from './contactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport ContactListItem from \"../contactListItem/ContactListIemContainer\"\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  // console.log(contacts);\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} id={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: contactsSelectors.getFilteredContacts(state)}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\"\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contactsRoot.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeFilter: (text) => dispatch( contactsAction.changeFilter(text))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n","import React from 'react';\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import styles from './logo.module.css';\r\n\r\n// const logoStyles = {\r\n//   appear: styles.appear,\r\n//   appearActive: styles.appearActive,\r\n// };\r\n\r\nconst Logo = () => {\r\n  return (\r\n    // <CSSTransition\r\n    //   in={true}\r\n    //   appear={true}\r\n    //   timeout={1000}\r\n    //   classNames={logoStyles}\r\n    //   unmountOnExit\r\n    // >\r\n      <h1>Phonebook</h1>\r\n    // </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nimport themeSwitch from './services/themeSwitch';\r\nimport ConatctForm from './components/conactForm/ContactForm';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport styles from './App.css';\r\nimport Logo from './components/logo/Logo';\r\n\r\nconst App = ({ contacts, theme, changeTheme, isLoadingContact }) => {\r\n\r\n  console.log({theme, changeTheme})\r\n  let themeState = 'light';\r\n  theme ? (themeState = 'light') : (themeState = 'dark');\r\n  \r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeSwitch[themeState].fontColor,\r\n        background: themeSwitch[themeState].bodybg,\r\n      }}\r\n    >\r\n      <div>\r\n        <>\r\n          <Logo />\r\n          {isLoadingContact && <h2>Loading...</h2>}\r\n          <button onClick={changeTheme}>Change Theme</button>\r\n        </>\r\n      </div>\r\n      <ConatctForm />\r\n      <h2 className={styles.sectionTitle}>Contacts</h2>\r\n      {contacts && contacts.length > 1 && <Filter />}\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport themeAction from './redux/theme/themeAction';\r\nimport contactsOperation from './redux/contacts/contactsOperation';\r\nimport contactsSelectors from './redux/contacts/contactsSelectors';\r\nimport themeSelectors from './redux/theme/themeSelectors';\r\n\r\nimport App from './App';\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return <App {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.contactsRoot.loading);\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n    theme: themeSelectors.getTheme(state),\r\n    isLoadingContact: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeTheme: () => dispatch(themeAction.changeTheme()) ,\r\n    onFetchContacts: () => dispatch(contactsOperation.fetchContacts()),\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactsAction';\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeContact = (state, action) => {\r\n  // console.log(action.payload.contact);\r\n  return state.map(contact => {\r\n    return contact.id === action.payload.contact.id\r\n      ? action.payload.contact \r\n      : contact;\r\n  });\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsAction.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsAction.addContactSuccess]: onAddContact,\r\n  [contactsAction.deleteContactSuccess]: onDeleteContact,\r\n  [contactsAction.changeContactSuccess]: onChangeContact,\r\n  // [contactsAction.changeContact]: onChangeContact,\r\n});\r\n\r\nconst onAddIdEditContact = (state, { payload }) => {\r\n  return [...state, payload];\r\n};\r\n\r\nconst onDeleteIdEditContact = (state, { payload }) => {\r\n  return state.filter(id => id !== payload);\r\n};\r\n\r\nconst idEditContact = createReducer([], {\r\n  [contactsAction.addIdEditContact]: onAddIdEditContact,\r\n  [contactsAction.deleteIdEditContact]: onDeleteIdEditContact,\r\n  // [contactsAction.addIdEditContactSuccess]: onAddIdEditContact,\r\n  // [contactsAction.deleteIdEditContactSuccess]: onDeleteIdEditContact,\r\n});\r\n\r\nconst onChangeFilter = (state, { payload }) => {\r\n  // console.log(payload);\r\n  return payload;\r\n};\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.changeFilter]: onChangeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsAction.fetchContactsRequest]: () => true,\r\n  [contactsAction.fetchContactsSuccess]: () => false,\r\n  [contactsAction.fetchContactsError]: () => false,\r\n  [contactsAction.addContactRequest]: () => true,\r\n  [contactsAction.addContactSuccess]: () => false,\r\n  [contactsAction.addContactsError]: () => false,\r\n  [contactsAction.deleteContactRequest]: () => true,\r\n  [contactsAction.deleteContactSuccess]: () => false,\r\n  [contactsAction.deleteContactError]: () => false,\r\n  [contactsAction.changeContactRequest]:()=> true,\r\n  [contactsAction.changeContactSuccess]: ()=> false,\r\n  [contactsAction.changeContactError]: ()=> false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  idEditContact,\r\n  filter,\r\n  loading,\r\n});\r\n","  \r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport themeAction from \"./themeAction\"\r\n\r\nconst themeReducer = createReducer(true, {\r\n  [themeAction.changeTheme]: state => !state,\r\n});\r\n\r\nexport default themeReducer;","  import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    themeColor: themeReducer,\r\n    contactsRoot: contactsReducer,\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './AppContainer';\r\n\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactListItem_listItem__14smR\",\"listItemP\":\"contactListItem_listItemP__2jV6x\",\"listItemButton\":\"contactListItem_listItemButton__fntAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__28Wa3\",\"editForm\":\"contactForm_editForm__ZrVCs\",\"input\":\"contactForm_input__3LP4-\",\"editInput\":\"contactForm_editInput__Udf71\",\"button\":\"contactForm_button__2t1tl\",\"editButton\":\"contactForm_editButton__2ZzSE\",\"label\":\"contactForm_label__1axD9\"};"],"sourceRoot":""}