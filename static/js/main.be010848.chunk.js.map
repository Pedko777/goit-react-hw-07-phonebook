{"version":3,"sources":["components/contactList/contactList.module.css","components/contactListItem/contactListItem.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsOperation.js","components/conactForm/ContactForm.js","redux/contacts/contactsSelectors.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","redux/theme/themeTypes.js","redux/theme/themeAction.js","services/themeSwitch.js","App.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","index.js","components/conactForm/contactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","changeContactRequest","changeContactSuccess","changeContactError","addIdEditContact","deleteIdEditContact","axios","defaults","baseURL","addContact","name","number","dispatch","contactsAction","post","then","data","catch","error","deleteContact","id","delete","fetchContacts","get","changeContact","patch","contact","ConatctForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","onSubmit","props","this","className","styles","editForm","label","input","type","placeholder","onChange","button","Component","connect","contactsOperation","getFilter","contactsRoot","filter","getContacts","contacts","loading","toLowerCase","includes","ContactListItem","isShowForm","console","log","listItem","listItemP","listItemButton","onClick","idEditContact","some","idEdit","contactsSelectors","contactList","map","key","onChangeFilter","text","Logo","changeTheme","theme","themeTypes","payload","themeSwitch","light","headerBg","fontColor","bodybg","dark","App","onFetchContacts","toggleTheme","isLoadingContact","style","color","background","sectionTitle","mapDispatchToProps","themeAction","createReducer","action","addContactsError","combineReducers","themeReducer","store","configureStore","reducer","contactsReducer","middleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be010848.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__3OGdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactListItem_listItem__14smR\",\"listItemP\":\"contactListItem_listItemP__2jV6x\",\"listItemButton\":\"contactListItem_listItemButton__fntAa\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/ADD_REQUEST');\r\nconst addContactSuccess = createAction('contacts/ADD_SUCCESS');\r\nconst addContactError = createAction('contacts/ADD_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('contacts/FETCH_REQUEST');\r\nconst fetchContactsSuccess = createAction('contacts/FETCH_SUCCESS');\r\nconst fetchContactsError = createAction('contacts/FETCH_ERROR');\r\n\r\nconst deleteContactRequest = createAction('contacts/DELETE_REQUEST');\r\nconst deleteContactSuccess = createAction('contacts/DELETE_SUCCESS');\r\nconst deleteContactError = createAction('contacts/DELETE_ERROR');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst changeContactRequest = createAction ('contacts/CHANGE_CONTACT_REQUEST')\r\nconst changeContactSuccess = createAction ('contacts/CHANGE_CONTACT_SUCCESS')\r\nconst changeContactError = createAction ('contacts/CHANGE_CONTACT_ERROR')\r\n\r\nconst addIdEditContact = createAction('contacts/addIdEditContact');\r\nconst deleteIdEditContact = createAction('contacts/deleteIdEditContact');\r\n\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n\r\n  changeContactRequest,\r\n  changeContactSuccess,\r\n  changeContactError,\r\n\r\n  changeFilter,\r\n  addIdEditContact,\r\n  deleteIdEditContact,\r\n};\r\n","import contactsAction from './contactsAction';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2020';\r\n\r\n// const db = 'http://localhost:2020/contacts';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsAction.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { number, name })\r\n    .then(({ data }) => {\r\n      dispatch(contactsAction.addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactsAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(contactsAction.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsAction.fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactsAction.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsAction.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsAction.deleteContactError(error)));\r\n};\r\n\r\nconst changeContact = (id, name, number) => dispatch => {\r\n  dispatch(contactsAction.changeContactRequest());\r\n\r\n  axios\r\n    .patch(`/contacts/${id}`, { number, name })\r\n    // .then(console.log({ id, number, name }))\r\n    .then(({data}) => {\r\n      // console.log(data);\r\n      dispatch(contactsAction.changeContactSuccess({contact:{id: data.id, name: data.name, number: data.number}}));\r\n    })\r\n    .catch(error => dispatch(contactsAction.changeContactError(error)));\r\n};\r\n\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n  changeContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './contactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\n\r\nclass ConatctForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n    name !== '' && number !== '' && onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name*\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number*\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (name, number) =>\r\n      dispatch(contactsOperation.addContact(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ConatctForm);\r\n","// import {createSelector} from \"@reduxjs/toolkit\"\r\nconst getLoading = state => state.contactsRoot.loading;\r\nconst getFilter = state => state.contactsRoot.filter;\r\nconst getContacts = state => state.contactsRoot.contacts;\r\n\r\nconst getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\n\r\nexport default {\r\n  getFilter,\r\n  getLoading,\r\n  getContacts,\r\n  getFilteredContacts,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './contactListItem.module.css';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nclass ContactListItem extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { deleteIdEditContact, changeContact } = this.props;\r\n    const { name, number } = this.state;\r\n    changeContact(name, number);\r\n    deleteIdEditContact();\r\n  };\r\n\r\n  render() {\r\n    const { contact, isShowForm, addIdEditContact, deleteContact } = this.props;\r\n    const { name, number } = this.state;\r\n    console.log(addIdEditContact);\r\n    return (\r\n      <li className={styles.listItem}>\r\n        <p className={styles.listItemP}>\r\n          name: {contact.name} tel: {contact.number}\r\n        </p>\r\n\r\n        {!isShowForm && (\r\n          <button\r\n            className={styles.listItemButton}\r\n            type=\"button\"\r\n            onClick={addIdEditContact}\r\n          >\r\n            Start Edit\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          className={styles.listItemButton}\r\n          onClick={deleteContact}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n\r\n        {isShowForm && (\r\n          <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n              Name*\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label className={styles.label}>\r\n              Phone number*\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                placeholder=\"number\"\r\n              />\r\n            </label>\r\n            <button className={styles.button} type=\"submit\">\r\n              EDIT\r\n            </button>\r\n          </form>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n  const arrayIdsEditContact = state.contactsRoot.idEditContact;\r\n  const isShowForm = arrayIdsEditContact.some(idEdit => idEdit === id);\r\n  return {\r\n    isShowForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => {\r\n  return {\r\n    deleteContact: () => dispatch(contactsOperation.deleteContact(id)),\r\n    changeContact: (name, number) =>\r\n      dispatch(contactsOperation.changeContact(id, name, number)),\r\n    addIdEditContact: () => dispatch(contactsAction.addIdEditContact(id)),\r\n    deleteIdEditContact: () => dispatch(contactsAction.deleteIdEditContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport styles from './contactList.module.css';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\"\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  // console.log(contacts);\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} id={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: contactsSelectors.getFilteredContacts(state)}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\"\r\nimport contactsAction from '../../redux/contacts/contactsAction';\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contactsRoot.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeFilter: (text) => dispatch( contactsAction.changeFilter(text))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n","import React from 'react';\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import styles from './logo.module.css';\r\n\r\n// const logoStyles = {\r\n//   appear: styles.appear,\r\n//   appearActive: styles.appearActive,\r\n// };\r\n\r\nconst Logo = () => {\r\n  return (\r\n    // <CSSTransition\r\n    //   in={true}\r\n    //   appear={true}\r\n    //   timeout={1000}\r\n    //   classNames={logoStyles}\r\n    //   unmountOnExit\r\n    // >\r\n      <h1>Phonebook</h1>\r\n    // </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;","export default {\r\n    CHANGE_THEME: \"theme/CHANGE_THEME\",\r\n}","import themeTypes from './themeTypes';\r\n\r\nconst changeTheme = (theme) => ({\r\n  type: themeTypes.CHANGE_THEME,\r\n  payload: {\r\n    theme,\r\n  },\r\n});\r\n\r\nexport default { changeTheme };","const themeSwitch = {\r\n    light: {\r\n      headerBg: '#F7B30C',\r\n      fontColor: 'black',\r\n      bodybg: 'white',\r\n    },\r\n    dark: {\r\n      headerBg: '#3c3c3c',\r\n      fontColor: 'white',\r\n      bodybg: 'black',\r\n    },\r\n  };\r\n  \r\n  export default themeSwitch;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ConatctForm from './components/conactForm/ContactForm';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport styles from './App.css';\r\nimport Logo from './components/logo/Logo';\r\nimport themeAction from './redux/theme/themeAction';\r\nimport themeSwitch from './services/themeSwitch';\r\nimport contactsOperation from \"./redux/contacts/contactsOperation\"\r\nimport contactsSelectors from \"./redux/contacts/contactsSelectors\"\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount (){\r\n    this.props.onFetchContacts()\r\n  }\r\nrender() {\r\n  const { theme, toggleTheme, isLoadingContact } = this.props\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeSwitch[theme].fontColor,\r\n        background: themeSwitch[theme].bodybg,\r\n      }}\r\n    >\r\n      <div>\r\n        <>\r\n          <Logo />\r\n          {isLoadingContact && <h2>Loading...</h2>}\r\n          <button onClick={toggleTheme}>Change Theme</button>\r\n        </>\r\n      </div>\r\n      <ConatctForm />\r\n      <h2 className={styles.sectionTitle}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n  \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state.contactsRoot.loading);\r\n  return {\r\n    theme: state.theme,\r\n    isLoadingContact: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: themeAction.changeTheme,\r\n  onFetchContacts: contactsOperation.fetchContacts\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './contactsAction';\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onDeleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst onChangeContact = (state, action) => {\r\n  // console.log(action.payload.contact);\r\n  return state.map(contact => {\r\n    return contact.id === action.payload.contact.id\r\n      ? action.payload.contact \r\n      : contact;\r\n  });\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsAction.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsAction.addContactSuccess]: onAddContact,\r\n  [contactsAction.deleteContactSuccess]: onDeleteContact,\r\n  [contactsAction.changeContactSuccess]: onChangeContact,\r\n  // [contactsAction.changeContact]: onChangeContact,\r\n});\r\n\r\nconst onAddIdEditContact = (state, { payload }) => {\r\n  return [...state, payload];\r\n};\r\n\r\nconst onDeleteIdEditContact = (state, { payload }) => {\r\n  return state.filter(id => id !== payload);\r\n};\r\n\r\nconst idEditContact = createReducer([], {\r\n  [contactsAction.addIdEditContact]: onAddIdEditContact,\r\n  [contactsAction.deleteIdEditContact]: onDeleteIdEditContact,\r\n  // [contactsAction.addIdEditContactSuccess]: onAddIdEditContact,\r\n  // [contactsAction.deleteIdEditContactSuccess]: onDeleteIdEditContact,\r\n});\r\n\r\nconst onChangeFilter = (state, { payload }) => {\r\n  // console.log(payload);\r\n  return payload;\r\n};\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.changeFilter]: onChangeFilter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsAction.fetchContactsRequest]: () => true,\r\n  [contactsAction.fetchContactsSuccess]: () => false,\r\n  [contactsAction.fetchContactsError]: () => false,\r\n  [contactsAction.addContactRequest]: () => true,\r\n  [contactsAction.addContactSuccess]: () => false,\r\n  [contactsAction.addContactsError]: () => false,\r\n  [contactsAction.deleteContactRequest]: () => true,\r\n  [contactsAction.deleteContactSuccess]: () => false,\r\n  [contactsAction.deleteContactError]: () => false,\r\n  [contactsAction.changeContactRequest]:()=> true,\r\n  [contactsAction.changeContactSuccess]: ()=> false,\r\n  [contactsAction.changeContactError]: ()=> false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  idEditContact,\r\n  filter,\r\n  loading,\r\n});\r\n","import themeTypes from './themeTypes';\r\n\r\nconst themeReducer = (state = 'light', action) => {\r\n  switch (action.type) {\r\n    case themeTypes.CHANGE_THEME:\r\n      if (state && state === 'light') {\r\n        return 'dark';\r\n      } else {\r\n        return 'light';\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n  export default themeReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    theme: themeReducer,\r\n    contactsRoot: contactsReducer,\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__28Wa3\",\"editForm\":\"contactForm_editForm__ZrVCs\",\"input\":\"contactForm_input__3LP4-\",\"editInput\":\"contactForm_editInput__Udf71\",\"button\":\"contactForm_button__2t1tl\",\"editButton\":\"contactForm_editButton__2ZzSE\",\"label\":\"contactForm_label__1axD9\"};"],"sourceRoot":""}